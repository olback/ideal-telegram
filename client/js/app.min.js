const socket=io.connect("http://localhost:5000");let online=[],selected=null;function toast(msg,time=5e3){const dialog=document.getElementById("toast");dialog.innerHTML=msg,dialog.style.display="block",setTimeout(()=>{dialog.style.display="none"},time)}function modal(t,p){const m=document.getElementById("modal");m.children[0].innerHTML=t,m.children[1].innerHTML=p,m.style.display="block",m.children[2].onclick=(()=>{m.style.display="none"})}function friendsList(username=null){const fl=document.getElementById("friends-list");fl.innerHTML="";let a=JSON.parse(window.localStorage.getItem("friends"));for(let i=0;i<a.length;i++)a[i].username===username?online.indexOf(a[i].username)>-1?fl.innerHTML+=`<div class="friend active online">${a[i].username}</div>`:fl.innerHTML+=`<div class="friend active">${a[i].username}</div>`:online.indexOf(a[i].username)>-1?fl.innerHTML+=`<div class="friend online" onclick="selectFriend('${a[i].username}')">${a[i].username}</div>`:fl.innerHTML+=`<div class="friend" onclick="selectFriend('${a[i].username}')">${a[i].username}</div>`}function selectFriend(username=null){let a=JSON.parse(window.localStorage.getItem("friends"));const h1=document.getElementById("h1-name");if("string"==typeof username)for(let i=0;i<a.length;i++)a[i].username===username&&(friendsList(a[i].username),h1.innerHTML=a[i].username,selected=a[i].username);else a.length>0?(friendsList(a[0].username),h1.innerHTML=a[0].username,selected=a[0].username):(friendsList(),h1.innerHTML="Chat",selected=null);renderChat(username)}function renderChat(username){const co=document.getElementById("chat-output"),cm=JSON.parse(window.sessionStorage.getItem(username));if(co.innerHTML="",username&&null!==cm){for(let i=0;i<cm.length;i++)appendChat(cm[i].from,cm[i].message);co.scrollTo({top:co.scrollHeight,behavior:"smooth"})}else co.innerHTML='<div class="chat-empty">No messages</div>'}function appendChat(username,message){const co=document.getElementById("chat-output");co.innerHTML+=`<div class="message"><span>${username}</span>${message}</div>`,co.scrollTo({top:co.scrollHeight+100,behavior:"smooth"})}async function sendMessage(to,message){if(null===to)return toast("No receiver specified");const from=window.localStorage.getItem("username");let m={to:to,from:from,message:null},friend=null,a=JSON.parse(window.localStorage.getItem("friends"));for(let i=0;i<a.length;i++)if(a[i].username===to){friend=a[i];break}const options={data:message,publicKeys:openpgp.key.readArmored(atob(friend.public_key)).keys};openpgp.encrypt(options).then(ciphertext=>{m.message=btoa(ciphertext.data)}).then(()=>{socket.emit("message",m),appendChat(m.from,message)})}function notify(title,body){Notification.requestPermission(result=>{"granted"===result&&navigator.serviceWorker.ready.then(registration=>{registration.showNotification(title,{body:body,icon:"/img/icon.png",vibrate:[200,100,200],tag:"encm"})})})}document.getElementById("send").onclick=(()=>{const i=document.getElementById("new-message");if(""!==i.value.trim()){if(null===selected)return toast("No receiver specified");sendMessage(selected,i.value),Encm.sessionStoreMessage(selected,window.localStorage.getItem("username"),i.value),i.value=""}else toast("Cannot send empty messages")}),document.getElementById("new-message").onkeypress=(e=>{"Enter"===e.code&&document.getElementById("send").onclick()}),document.getElementById("open-delete").onclick=(()=>{const m=document.getElementById("delete-friend"),i=document.getElementById("delete-input"),b=document.getElementById("delete-button");m.style.display="block",b.onclick=(()=>{if(""!==i.value){const r=Encm.delFriend(i.value);toast(r.msg),i.value===selected&&(selected=null),r.error||(selectFriend(selected),i.value="",b.innerHTML="Close"),m.style.display="none"}else m.style.display="none"}),i.onkeyup=(e=>{""!==i.value?b.innerHTML="Delete":b.innerHTML="Close"})}),document.getElementById("open-export-json").onclick=(()=>{const j={username:window.localStorage.getItem("username"),public_key:btoa(window.localStorage.getItem("pgp.public"))};modal("Export",`<code>${JSON.stringify(j)}</code>`)}),document.getElementById("open-import-json").onclick=(()=>{const m=document.getElementById("import"),i=document.getElementById("import-json"),b=document.getElementById("import-json-button");b.onclick=(()=>{if(""!==i.value)try{const j=JSON.parse(i.value);if(Encm.isFriend(j.username))throw m.style.display="none",`${j.username} is already in your friends list.`;Encm.addFriend(j.username,j.public_key),m.style.display="none",toast(`Contact successfully ${j.username} imported.`),i.value="",selectFriend(selected),b.innerHTML="Close"}catch(e){toast(e)}else m.style.display="none"}),i.onkeyup=(e=>{""!==i.value?b.innerHTML="Import":b.innerHTML="Close"}),m.style.display="block"}),document.getElementById("add-friend").onclick=document.getElementById("open-import-json").onclick,selectFriend(),renderChat(selected),socket.on("message",async data=>{const passphrase=window.localStorage.getItem("pgp.passphrase"),privKeyObj=openpgp.key.readArmored(window.localStorage.getItem("pgp.private")).keys[0];await privKeyObj.decrypt(passphrase);const options={message:openpgp.message.readArmored(atob(data.message)),privateKeys:[privKeyObj]};openpgp.decrypt(options).then(plaintext=>(appendChat(data.from,plaintext.data),Encm.sessionStoreMessage(data.from,data.from,plaintext.data),plaintext.data))}),socket.on("online",data=>{friendsList(selected),online=data}),socket.on("err",data=>{toast(data.msg)}),"granted"!==Notification.permission&&Notification.requestPermission(p=>{toast("granted"===p?"Notifications enabled":"Notifications disabled")}),"serviceWorker"in navigator&&window.addEventListener("load",()=>{navigator.serviceWorker.register("/sw.js",{scope:"/"}).then(registration=>{console.log("ServiceWorker registration successful with scope: ",registration.scope)},err=>{console.error("ServiceWorker registration failed: ",err)})}),setInterval(()=>{socket.emit("login",window.localStorage.getItem("username"))},1e3);