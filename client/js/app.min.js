const socket=io.connect("http://localhost:5000");let online=[],selected=null;function toast(msg,time=5e3){const dialog=document.getElementById("toast");dialog.innerHTML=msg,dialog.style.display="block",setTimeout(()=>{dialog.style.display="none"},time)}function modal(t,p){const m=document.getElementById("modal");m.children[0].innerHTML=t,m.children[1].innerHTML=p,m.style.display="block",m.children[2].onclick=(()=>{m.style.display="none"})}function friendsList(username=null){const fl=document.getElementById("friends-list");fl.innerHTML="";let a=JSON.parse(window.localStorage.getItem("encm.friends"));for(let i=0;i<a.length;i++)a[i].username===username?fl.innerHTML+=`<div class="friend active">${a[i].username}</div>`:fl.innerHTML+=`<div onclick="selectFriend('${a[i].username}')"class="friend">${a[i].username}</div>`}function selectFriend(username=null){let a=JSON.parse(window.localStorage.getItem("encm.friends"));const h1=document.getElementById("h1-name");if("string"==typeof username)for(let i=0;i<a.length;i++)a[i].username===username&&(friendsList(a[i].username),h1.innerHTML=a[i].username,selected=a[i].username);else a.length>0?(friendsList(a[0].username),h1.innerHTML=a[0].username,selected=a[0].username):(friendsList(),h1.innerHTML="Chat",selected=null)}document.getElementById("open-delete").onclick=(()=>{const m=document.getElementById("delete-friend"),i=document.getElementById("delete-input"),b=document.getElementById("delete-button");m.style.display="block",b.onclick=(()=>{if(""!==i.value){const r=Encm.delFriend(i.value);console.log(r),toast(r.msg),i.value===selected&&(selected=null),r.error||(selectFriend(selected),i.value="",b.innerHTML="Close"),m.style.display="none"}else m.style.display="none"}),i.onkeyup=(e=>{""!==i.value?b.innerHTML="Delete":b.innerHTML="Close"})}),document.getElementById("open-export-json").onclick=(()=>{const j={username:window.localStorage.getItem("encm.name"),public_key:btoa(window.localStorage.getItem("pgp.public"))};modal("Export",`<code>${JSON.stringify(j)}</code>`)}),document.getElementById("open-import-json").onclick=(()=>{const m=document.getElementById("import"),i=document.getElementById("import-json"),b=document.getElementById("import-json-button");b.onclick=(()=>{if(""!==i.value)try{const j=JSON.parse(i.value);if(Encm.isFriend(j.username))throw m.style.display="none",`${j.username} is already in your friends list.`;Encm.addFriend(j.username,j.public_key),m.style.display="none",toast(`Contact successfully ${j.username} imported.`),i.value="",selectFriend(selected),b.innerHTML="Close"}catch(e){toast(e)}else m.style.display="none"}),i.onkeyup=(e=>{""!==i.value?b.innerHTML="Import":b.innerHTML="Close"}),m.style.display="block"}),document.getElementById("add-friend").onclick=document.getElementById("open-import-json").onclick,selectFriend();const encryptDecryptFunction=async()=>{const passphrase=window.localStorage.getItem("pgp.passphrase"),privKeyObj=openpgp.key.readArmored(window.localStorage.getItem("pgp.private")).keys[0];await privKeyObj.decrypt(passphrase);const options={data:"Hello, World!",publicKeys:openpgp.key.readArmored(window.localStorage.getItem("pgp.public")).keys};openpgp.encrypt(options).then(ciphertext=>(encrypted=ciphertext.data,encrypted)).then(encrypted=>{const options={message:openpgp.message.readArmored(encrypted),privateKeys:[privKeyObj]};openpgp.decrypt(options).then(plaintext=>(console.log(plaintext.data),plaintext.data))})};